name: build-srs
on:
  schedule:
    - cron: '45 22 * * *'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Install sing-rules-converter
        run: go install github.com/solanab/sing-rules-converter/v3@latest

      - name: Fetch upstream rule files (raw, no CDN delay)
        run: |
          curl -L -o direct.yaml  https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt
          curl -L -o private.yaml https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt
          curl -L -o cncidr.yaml  https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt
          curl -L -o google.yaml  https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt

      - name: Filter direct.yaml by removing entries covered by google.yaml
        shell: bash
        run: |
          python3 - << 'PY'
          import sys
          def iter_items(path):
            with open(path, 'r', encoding='utf-8', errors='ignore') as f:
              for raw in f:
                line = raw.strip()
                if not line or line.startswith('#') or line.startswith('payload:'):
                  continue
                if line.startswith('-'):
                  line = line[1:].lstrip()
                if (line.startswith("'") and line.endswith("'")) or (line.startswith('"') and line.endswith('"')):
                  line = line[1:-1]
                if ',' in line and line.split(',',1)[0].upper() in ('DOMAIN','DOMAIN-SUFFIX'):
                  typ, val = line.split(',',1)
                  yield ('suffix' if typ.upper()=='DOMAIN-SUFFIX' else 'exact', val.strip().lower()); continue
                if line.startswith('+.'):
                  yield ('suffix', line[2:].lower())
                else:
                  yield ('exact', line.lower())

          def is_subdomain(child, parent_suffix):
            return child==parent_suffix or child.endswith('.'+parent_suffix)

          g_suffix, g_exact = set(), set()
          for t,v in iter_items('google.yaml'):
            (g_suffix if t=='suffix' else g_exact).add(v)

          kept=[]
          for t,v in iter_items('direct.yaml'):
            drop=False
            if t=='exact':
              if v in g_exact or any(is_subdomain(v,s) for s in g_suffix): drop=True
            else: # suffix
              if v in g_exact or any(v==s or v.endswith('.'+s) for s in g_suffix): drop=True
            if not drop: kept.append((t,v))

          with open('direct.filtered.yaml','w',encoding='utf-8') as f:
            f.write('payload:\n')
            for t,v in kept:
              f.write(f"  - '+.{v}'\n" if t=='suffix' else f"  - '{v}'\n")
          print(f'kept {len(kept)} items', file=sys.stderr)
          PY

      - name: Convert to .srs (sing-box binary rule-sets)
        run: |
          mkdir -p out public
          # direct（已去重）
          $(go env GOPATH)/bin/sing-rules-converter direct.filtered.yaml -o out/direct
          # private（原样转）
          $(go env GOPATH)/bin/sing-rules-converter private.yaml -o out/private
          # cncidr（IP CIDR）
          $(go env GOPATH)/bin/sing-rules-converter cncidr.yaml -o out/cncidr

          # 统一命名 .srs
          mv out/direct-domain.srs  public/direct.srs
          mv out/private-domain.srs public/private.srs
          mv out/cncidr-ipcidr.srs public/cncidr.srs

          # 同步发布 YAML（保留处理后的 direct）
          cp direct.filtered.yaml   public/direct.yaml
          cp private.yaml           public/private.yaml
          cp cncidr.yaml            public/cncidr.yaml

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
